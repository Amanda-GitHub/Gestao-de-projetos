// <auto-generated />
using System;
using ClassLibrary1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassLibrary1.Migrations
{
    [DbContext(typeof(ContextoDB))]
    [Migration("20201119212317_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClassLibrary1.Models.AssociacaoProjeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<int?>("IdProjeto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdProjeto");

                    b.ToTable("AssociacaoProjetos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdFuncionario = 1,
                            IdProjeto = 2
                        },
                        new
                        {
                            Id = 2,
                            IdFuncionario = 1,
                            IdProjeto = 3
                        },
                        new
                        {
                            Id = 3,
                            IdFuncionario = 2,
                            IdProjeto = 2
                        },
                        new
                        {
                            Id = 4,
                            IdFuncionario = 4,
                            IdProjeto = 3
                        },
                        new
                        {
                            Id = 5,
                            IdFuncionario = 3,
                            IdProjeto = 1
                        },
                        new
                        {
                            Id = 6,
                            IdFuncionario = 2,
                            IdProjeto = 1
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<int>("IdProjeto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProjeto");

                    b.ToTable("Atividades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duracao = 24,
                            IdProjeto = 1,
                            Nome = "Criação código"
                        },
                        new
                        {
                            Id = 2,
                            Duracao = 8,
                            IdProjeto = 1,
                            Nome = "Criação BD"
                        },
                        new
                        {
                            Id = 3,
                            Duracao = 24,
                            IdProjeto = 2,
                            Nome = "Populate BD"
                        },
                        new
                        {
                            Id = 4,
                            Duracao = 60,
                            IdProjeto = 2,
                            Nome = "Teste produção"
                        },
                        new
                        {
                            Id = 5,
                            Duracao = 16,
                            IdProjeto = 3,
                            Nome = "Criação parte gráfica"
                        },
                        new
                        {
                            Id = 6,
                            Duracao = 20,
                            IdProjeto = 3,
                            Nome = "Populate BD"
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Funcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdChefe")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubChefe")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdChefe");

                    b.HasIndex("IdSubChefe");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Funcao = "Programador",
                            IdChefe = 1,
                            Nome = "Aline Dantas"
                        },
                        new
                        {
                            Id = 2,
                            Funcao = "Programador",
                            IdSubChefe = 1,
                            Nome = "Sergio Rodrigues"
                        },
                        new
                        {
                            Id = 3,
                            Funcao = "Programador",
                            Nome = "Marcos Silva"
                        },
                        new
                        {
                            Id = 4,
                            Funcao = "Programador",
                            IdSubChefe = 2,
                            Nome = "Paula Machado"
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<int>("IdResponsavel")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdResponsavel");

                    b.ToTable("Projetos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataFim = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2020, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracao = 40,
                            IdResponsavel = 2,
                            Nome = "Site Vendas"
                        },
                        new
                        {
                            Id = 2,
                            DataFim = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2021, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracao = 160,
                            IdResponsavel = 1,
                            Nome = "Sistema de faturacao"
                        },
                        new
                        {
                            Id = 3,
                            DataFim = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracao = 48,
                            IdResponsavel = 3,
                            Nome = "App mobile"
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.AssociacaoProjeto", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Funcionario", "Funcionario")
                        .WithMany("AssociacaoProjetos")
                        .HasForeignKey("IdFuncionario");

                    b.HasOne("ClassLibrary1.Models.Projeto", "Projeto")
                        .WithMany("AssociacaoProjetos")
                        .HasForeignKey("IdProjeto");

                    b.Navigation("Funcionario");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Atividade", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Projeto", "Projeto")
                        .WithMany("Atividades")
                        .HasForeignKey("IdProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Funcionario", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Funcionario", "Chefe")
                        .WithMany()
                        .HasForeignKey("IdChefe");

                    b.HasOne("ClassLibrary1.Models.Funcionario", "SubChefe")
                        .WithMany()
                        .HasForeignKey("IdSubChefe");

                    b.Navigation("Chefe");

                    b.Navigation("SubChefe");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Projeto", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Funcionario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("IdResponsavel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Funcionario", b =>
                {
                    b.Navigation("AssociacaoProjetos");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Projeto", b =>
                {
                    b.Navigation("AssociacaoProjetos");

                    b.Navigation("Atividades");
                });
#pragma warning restore 612, 618
        }
    }
}
